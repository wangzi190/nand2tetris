// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
	IN in[16], load;
	OUT out[16];

	PARTS:

	DFF(in=indff0, out=outdff0, out=out[0]);
	Mux(a=outdff0, b=in[0], sel=load, out=indff0);

	DFF(in=indff1, out=outdff1, out=out[1]);
	Mux(a=outdff1, b=in[1], sel=load, out=indff1);

	DFF(in=indff2, out=outdff2, out=out[2]);
	Mux(a=outdff2, b=in[2], sel=load, out=indff2);

	DFF(in=indff3, out=outdff3, out=out[3]);
	Mux(a=outdff3, b=in[3], sel=load, out=indff3);

	DFF(in=indff4, out=outdff4, out=out[4]);
	Mux(a=outdff4, b=in[4], sel=load, out=indff4);

	DFF(in=indff5, out=outdff5, out=out[5]);
	Mux(a=outdff5, b=in[5], sel=load, out=indff5);

	DFF(in=indff6, out=outdff6, out=out[6]);
	Mux(a=outdff6, b=in[6], sel=load, out=indff6);

	DFF(in=indff7, out=outdff7, out=out[7]);
	Mux(a=outdff7, b=in[7], sel=load, out=indff7);

	DFF(in=indff8, out=outdff8, out=out[8]);
	Mux(a=outdff8, b=in[8], sel=load, out=indff8);

	DFF(in=indff9, out=outdff9, out=out[9]);
	Mux(a=outdff9, b=in[9], sel=load, out=indff9);

	DFF(in=indff10, out=outdff10, out=out[10]);
	Mux(a=outdff10, b=in[10], sel=load, out=indff10);

	DFF(in=indff11, out=outdff11, out=out[11]);
	Mux(a=outdff11, b=in[11], sel=load, out=indff11);

	DFF(in=indff12, out=outdff12, out=out[12]);
	Mux(a=outdff12, b=in[12], sel=load, out=indff12);

	DFF(in=indff13, out=outdff13, out=out[13]);
	Mux(a=outdff13, b=in[13], sel=load, out=indff13);

	DFF(in=indff14, out=outdff14, out=out[14]);
	Mux(a=outdff14, b=in[14], sel=load, out=indff14);

	DFF(in=indff15, out=outdff15, out=out[15]);
	Mux(a=outdff15, b=in[15], sel=load, out=indff15);
}
